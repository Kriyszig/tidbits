{"version":3,"sources":["static/img/avatar.jpg","components/topbar.js","components/about.js","components/fly.js","pages/stage.js","pages/vaporfly.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","className","About","src","Avatar","alt","lazy","Fly","props","router","onClick","Stage","Vaporfly","App","useState","routeState","setRouteState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,oC,iQCa5BC,MAVf,WACE,OACE,yBAAKC,UAAU,UACb,0BAAMA,UAAU,QAAhB,a,sBCgBSC,MAlBf,WACE,OACE,yBAAKD,UAAU,SACb,yBAAKA,UAAU,SAASE,IAAKC,IAAQC,IAAI,KAAKC,MAAI,IAClD,uBAAGL,UAAU,SAAb,oBACmB,yBAAKA,UAAU,MAAf,WADnB,SAC0D,6BAD1D,2BAE0B,6BAF1B,2BAG0B,sCAAgB,6BAH1C,qBAIoB,wCAClB,6BAAM,6BALR,6CAM4C,6BAN5C,4CAO2C,6BAP3C,aAQY,oCARZ,eAQsC,oCARtC,2B,MCgBSM,MArBf,SAAaC,GAAQ,IACZC,EAAUD,EAAVC,OAEP,OAEE,uBAAGR,UAAU,OAAOS,QAAS,kBAAMD,EAAO,SACxC,yBAAKR,UAAU,qBACb,uBAAGA,UAAU,4BAAb,8CAGA,uBAAGA,UAAU,gBAAb,sBAGA,uBAAGA,UAAU,uBAAb,4F,MCCOU,MAZf,SAAeH,GAAQ,IACdC,EAAUD,EAAVC,OACP,OACE,yBAAKR,UAAU,mBACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAKQ,OAAQA,O,MC0DNG,MAlEf,SAAkBJ,GAAQ,IACjBC,EAAUD,EAAVC,OAEP,OACE,yBAAKR,UAAU,mBACb,yBAAKA,UAAU,SAEb,uBAAGA,UAAU,OAAOS,QAAS,kBAAMD,EAAO,OACxC,yBAAKR,UAAU,SAAf,UADF,YAGA,uBAAGA,UAAU,YAAb,oCAGA,uBAAGA,UAAU,QAAb,sBAGA,yBAAKA,UAAU,aACb,2BACE,8CADF,ojBAWA,ijBASA,wbAQA,2BACE,4DADF,6RAOA,8b,MC9BKY,MAlBf,WAAgB,IAAD,EACuBC,mBAAS,KADhC,mBACNC,EADM,KACMC,EADN,KAGb,OACE,yBAAKf,UAAU,kBACb,kBAAC,EAAD,MAEkB,MAAfc,EACC,kBAAC,EAAD,CAAQN,OAAQO,IACA,QAAfD,EACD,kBAAC,EAAD,CAAUN,OAAQO,IAElB,KCPUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f3987ed6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.2deaad0d.jpg\";","import React from 'react';\nimport './topbar.css';\n\nfunction TopBar() {\n  return (\n    <nav className=\"topbar\">\n      <span className=\"logo\">\n        TIDBITS\n      </span>\n    </nav>\n  )\n}\n\nexport default TopBar;","import React from 'react';\nimport Avatar from '../static/img/avatar.jpg'\nimport './about.css';\n\nfunction About() {\n  return (\n    <div className=\"about\">\n      <img className=\"avatar\" src={Avatar} alt=\"Me\" lazy />\n      <p className=\"intro\">\n        Hello there, I'm <kbd className=\"me\">Prateek</kbd> (^_^)<br />\n        An average 1x developer.<br />\n        Developing for web with <kbd>React</kbd><br />\n        & for mobile with <kbd>Flutter</kbd>\n        <br /><br />\n        Tidbits is a place for my shower thoughts.<br />\n        Some thoughts may be dark and disturbing!<br />\n        I may use <kbd>var</kbd> instead of <kbd>let</kbd> in my code snippets.\n      </p>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react';\nimport './snippet.css';\n\nfunction Fly(props) {\n  const {router} = props;\n\n  return(\n    // eslint-disable-next-line\n    <a className=\"link\" onClick={() => router('fly')}>\n      <div className=\"article-container\">\n        <p className=\"article-snippet-headline\">\n          Nike Vaporfly - The other side of the coin\n        </p>\n        <p className=\"article-date\">\n          27th January, 2019\n        </p>\n        <p className=\"article-description\">\n          What does the Nike Vaporfly's advantage mean for an athlete and should it be banned?\n        </p>\n      </div>\n    </a>\n  );\n}\n\nexport default Fly;\n","import React from 'react';\nimport About from '../components/about';\nimport Fly from '../components/fly';\nimport './stage.css';\n\nfunction Stage(props) {\n  const {router} = props;\n  return(\n    <div className=\"stage-container\">\n      <div className=\"stage\">\n        <About />\n        <Fly router={router} />\n      </div>\n    </div>\n  )\n}\n\nexport default Stage;\n","import React from 'react';\nimport './article.css';\n\nfunction Vaporfly(props) {\n  const {router} = props;\n\n  return (\n    <div className=\"stage-container\">\n      <div className=\"stage\">\n        {/*eslint-disable-next-line*/}\n        <a className=\"link\" onClick={() => router('/')}>\n          <kbd className=\"arrow\">â—€</kbd> Go Back\n        </a>\n        <p className=\"headline\">\n          Nike Vaporfly - A Case of Milage\n        </p>\n        <p className=\"date\">\n          27th January, 2019\n        </p>\n        <div className=\"post-body\">\n          <p>\n            <kbd>Nike Vaporfly</kbd> has made headlines recently and not in a good\n            way. Nike's research and several other independent ones claim that the\n            shoe gives a 4% performance boost for runners and it is pretty clear that\n            they work looking at the recent records that were shattered especially\n            the one Eliud Kipchoge set by running a full marathon in just under two\n            hours. With such a feat came controversies. There are rumours that the\n            shoe will likely be banned before the Tokyo Olympic Games as it provides\n            an unfair advantage to the wearer. But let us look at the other side of\n            the coin.\n          </p>\n          <p>\n            The Vaporfly is now a case of milage - In other words, how small improvements\n            can go a long way for an athlete with a career in running. Many athletes\n            retire from sports every year. Most of them, we never hear from ever again\n            on a large stage. Now you may argue that these celebrities, these athletes\n            have made some good decision along their career to enable a smooth retirement\n            where their investments and their prior deals bring in money to sustain their\n            lives but most don't end up in rich mansion on a cliff staring the ocean.\n          </p>\n          <p>\n            Why is Vaporfly an unfair advantage? Only because you can't run in them once\n            you have been signed on by Adidas. Kidding aside, ability to sustain their\n            prime time for a longer duration can help these athletes a lot in the long\n            run - not only the run on the track but also the run of their life. The ability\n            to compete for a little longer is the straw any athlete would take in this\n            super competitive industry.\n          </p>\n          <p>\n            <kbd>Using it is same as doping!</kbd> Now that I think is debatable. Doping\n            provides you with a transformation enabling you to put in far more than you\n            could prior to doping but Nike simply reduces the energy lost per step. It's\n            not like mother Earth is pushing you up magically to enable you to outperform\n            the others.\n          </p>\n          <p>\n            In the end I think Vaporfly marks a new milestone in shoe industry despite\n            the controversy surrounding it. Does it make you better instantly? Yes, but\n            it also enables you to push forward without flying too close to the sun. In\n            the long run, it's benefits may just enable us to watch our favorite\n            athletes compete longer without dropping out keeping us jammed to the\n            television sets and them jammed at the sport. \n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Vaporfly;","import React, {useState} from 'react';\n\nimport TopBar from './components/topbar';\nimport Stage from './pages/stage';\nimport Vaporfly from './pages/vaporfly';\nimport './App.css';\n\nfunction App() {\n  const [routeState, setRouteState] = useState('/');\n\n  return (\n    <div className=\"hero-container\">\n      <TopBar />\n      {\n        (routeState === '/')?\n          <Stage  router={setRouteState} />\n        : (routeState === 'fly')?\n          <Vaporfly router={setRouteState} />\n        :\n          ''\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}